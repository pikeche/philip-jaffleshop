version: 2

sources:
    - name: jaffle_shop
      description: A clone of a Postgres application database. 
      database: sandbox       
      schema: PIKECHE        
      # schema: jaffle_shop
      tables:
        - name: customers
          description: Raw customers data.
          columns:
            - name: id
              description: Primary key for customers
              tests:
                - unique
                - not_null

        - name: orders
          description: Raw orders data.
          columns:
            - name: id
              description: Primary key for orders.
              tests:
                - unique
                - not_null

        # - name: products
        #   description: One record per SKU for items sold in stores
        #   columns:
        #     - name: sku
        #       description: Primary key for orders.
        #       tests:
        #         - unique:
        #             config:
        #               severity: warn
        #         - not_null:
        #             config:
        #               severity: warn
        - name: mock_orders
          description: Raw orders data.
          columns:
            - name: order_id
              description: Primary key for orders.
              tests:
                - unique
                - not_null

        # - name: orders
        #   description: Complete orders model including the amount associated with each order.
        #   tests:
        #     - dbt_utils.expression_is_true:
        #         expression: "amount >= 0"
        #   columns:
        #     - name: order_id
        #       description: Primary key for orders
        #       tests:
        #         - unique
        #         - not_null
        #     - name: amount
        #       description: Dollars spent per order
        #       tests: 
        #         - dollars_spent_greater_than_one:
        #             group_by_column: customer_id
        #         - dbt_expectations.expect_column_values_to_be_between: 
        #         # this will perform what the dbt_utils.expression-is-true test does!
        #             min_value: 0
        #             row_condition: "order_id is not null" 
        #             strictly: false
        #         - dbt_expectations.expect_column_mean_to_be_between: 
        #         # this will perform what our singular and generic tests do!
        #             min_value: 1
        #             group_by: [customer_id] 
        #             row_condition: "order_id is not null" # (Optional)
        #             strictly: false
         